//
//  ListCharactersViewController.swift
//  BobsBDemo
//
//  Created by Gokul Krishna on 08/06/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListCharactersDisplayLogic: AnyObject
{
  func displayFetchCharacters(viewModel: ListCharacters.FetchCharacters.ViewModel)
}

class ListCharactersViewController: UIViewController, ListCharactersDisplayLogic
{
    
  var interactor: ListCharactersBusinessLogic?
  var router: (NSObjectProtocol & ListCharactersRoutingLogic & ListCharactersDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = ListCharactersInteractor()
    let presenter = ListCharactersPresenter()
    let router = ListCharactersRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
      fetchCharacters()
      tableView.dataSource = self
      tableView.delegate = self
  }
  
  // MARK: Do something
  
    @IBOutlet weak var tableView: UITableView!
    //@IBOutlet weak var nameTextField: UITextField!
    var displayedCharacters: [ListCharacters.FetchCharacters.ViewModel.DisplayedCharacter] = []
    
  func fetchCharacters()
  {
    let request = ListCharacters.FetchCharacters.Request()
    interactor?.fetchCharacters(request: request)
  }
  
  func displayFetchCharacters(viewModel: ListCharacters.FetchCharacters.ViewModel)
  {
    //nameTextField.text = viewModel.name
      tableView.reloadData()
  }
}

extension ListCharactersViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        displayedCharacters.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "CharacterTableViewCell", for: indexPath) as! CharacterTableViewCell
        cell.characterNameLabel.text = displayedCharacters[indexPath.row].name
        cell.characterVoiceByLabel.text = displayedCharacters[indexPath.row].voicedBy
        let url = URL(string: displayedCharacters[indexPath.row].image)

        DispatchQueue.global().async {
            let data = try? Data(contentsOf: url!) //make sure your image in this url does exist, otherwise unwrap in a if let check / try-catch
            DispatchQueue.main.async {
                cell.characterImageView.image = UIImage(data: data!)
            }
        }
        return cell
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        1
    }
}
