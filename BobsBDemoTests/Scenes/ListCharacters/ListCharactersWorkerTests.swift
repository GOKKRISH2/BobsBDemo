//
//  ListCharactersWorkerTests.swift
//  BobsBDemo
//
//  Created by Gokul Krishna on 08/06/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import BobsBDemo
import XCTest

class ListCharactersWorkerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListCharactersWorker!
    static var testCharacters: [Character]!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupListCharactersWorker()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListCharactersWorker()
  {
      sut = ListCharactersWorker(charactersStore: CharacterAPISpy())
      ListCharactersWorkerTests.testCharacters = [Seeds.Charecters.testCharacter1,Seeds.Charecters.testCharacter2]
  }
  
  // MARK: Test doubles
    class CharacterAPISpy: CharacterAPI {
        
        var fetchCharactersCalled = false
        
        override func fetchCharacters(completionHandler: @escaping ([Character]) -> Void) {
            fetchCharactersCalled = true
            DispatchQueue.main.asyncAfter(deadline: .now() + .seconds(1)) {
                completionHandler (ListCharactersWorkerTests.testCharacters)
            }
        }
    }
  
    // MARK: - Tests
    
    func testFetchCharactersShouldReturnListOfCharacters() {
      // Given
        let listCharactersAPISpy = sut.charactersStore as! CharacterAPISpy
      // When
      var fetchedCharacters = [Character]()
      let expect = expectation(description: "Wait for fetchCharacters() to return")
        sut.fetchCharacters(completionHandler: { (characters) in
            fetchedCharacters = characters
            expect.fulfill()
        })
      waitForExpectations(timeout: 1.1)

      // Then
        XCTAssert(listCharactersAPISpy.fetchCharactersCalled, "Calling fetchCharacters() should ask the data store for a list of Characters")
      XCTAssertEqual(fetchedCharacters.count, ListCharactersWorkerTests.testCharacters.count, "fetchCharacters() should return a list of Characters")
    }
}
