//
//  ListCharactersPresenterTests.swift
//  BobsBDemo
//
//  Created by Gokul Krishna on 08/06/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import BobsBDemo
import XCTest

class ListCharactersPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListCharactersPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupListCharactersPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListCharactersPresenter()
  {
    sut = ListCharactersPresenter()
  }
  
  // MARK: Test doubles
  
  class ListCharactersDisplayLogicSpy: ListCharactersDisplayLogic
    {
      
    var displayFetchCharactersCalled = false
    
    func displayFetchCharacters(viewModel: ListCharacters.FetchCharacters.ViewModel)
    {
        displayFetchCharactersCalled = true
    }
  }
  
  // MARK: Tests
  
  func testPresentSomething()
  {
    // Given
    let spy = ListCharactersDisplayLogicSpy()
    sut.viewController = spy
      let charecters = Character(id: 1, name: "", image: "", gender: "", hairColor: "", occupation: "", firstEpisode: "", voicedBy: "", url: "", wikiURL: "", age: "", relatives: [Relative(name: "", wikiURL: "", relationship: "", url: "")])
    // When
      sut.presentSomething(response: ListCharacters.FetchCharacters.Response(characters: [charecters]))
    
    // Then
    XCTAssertTrue(spy.displayFetchCharactersCalled, "presentSomething(response:) should ask the view controller to display the result")
  }
}
